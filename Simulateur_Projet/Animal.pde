abstract class Animal extends Espece {
  
 //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
/*======================================================================================================================================================================================================
==================================================================================================VARIABLES=============================================================================================
======================================================================================================================================================================================================*/ 
 
  protected String[] prey;                                                    //Liste des proies de l'espèce
 
 //---------------------------------------------------------------------------------------------CONSTANTE PERSONNELLES-------------------------------------------------------------------------------------------------
  
  protected int VITESSE_PROPAGATION;
  
/*======================================================================================================================================================================================================
=================================================================================================FONCTIONS==============================================================================================
======================================================================================================================================================================================================*/ 
  
//---------------------------------------------------------------------------------------------GETTERS-------------------------------------------------------------------------------------------------
  
//--------------------------------------------------------------------------------------------FONCTIONS-------------------------------------------------------------------------------------------------
  
  void Move(){                                                                //génére une migration aléatoire chaques mois
        if(jour == 1){
          for(int x = 0; x<posMap.length;x++)
            for(int y = 0; y<posMap[0].length;y++){
              if(posMap[x][y]>0){
              for(int i =0;i<4;i++){
           float ran =  random(0,VITESSE_PROPAGATION);
           ran = ran/100*posMap[x][y];
           posMap[x][y]-= ran; 
           
             if(i == 1 && x>0 && altitude[x-1][y]>0) posMap[x-1][y]+= ran;
             else if(i == 2 && x<posMap.length-1 && altitude[x+1][y]>0) posMap[x+1][y]+= ran;
             else if(i == 3 && y>0 && altitude[x][y-1]>0) posMap[x][y-1]+= ran;
             else if(i == 4 && y<posMap[0].length-1 && altitude[x][y+1]>0) posMap[x][y+1]+= ran;
             else posMap[x][y]+= ran;
 
              }
           }
           }
          }
  }
  
      void Eat(int x, int y){                                                 //Algorithme pour se nourrir (ne pas utiliser pour herbivores)
      if(prey.length>0){
        
         int animalQuantity = posMap[x][y];
         int prop = posMap[x][y]/prey.length;
           
        for(int i =0; i<prey.length; i++){
        
         int ID = GetAnimalID(prey[i]);
         Animal animal = animals.get(ID);
         int preyQuantity = animal.GetAt(x,y);
         
         if(preyQuantity>=prop){
           animal.Die(x,y,CAUSE_MANGE,prop);
         }else{
           animal.Die(x,y,CAUSE_MANGE,preyQuantity);
           animalQuantity -= preyQuantity;
         }

         }
         
         for(int i =0; i<prey.length; i++){
        
         int ID = GetAnimalID(prey[i]);
         Animal animal = animals.get(ID);
         int preyQuantity = animal.GetAt(x,y);
         
         if(preyQuantity>animalQuantity){
           animal.Die(x,y,CAUSE_MANGE,animalQuantity);
           animalQuantity -= animalQuantity;
         }else{
           animal.Die(x,y,CAUSE_MANGE,preyQuantity);
           animalQuantity -= preyQuantity;
         }

         }
         
         
         if(animalQuantity>0){
           Die(x,y,2,animalQuantity);
         }
         
        }
      
      }
      
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

}
